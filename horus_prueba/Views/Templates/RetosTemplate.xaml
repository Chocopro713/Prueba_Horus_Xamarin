<?xml version="1.0" encoding="UTF-8" ?>
<ContentView
    x:Class="horus_prueba.Views.Templates.RetosTemplate"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:horus_prueba.Converters"
    xmlns:ffimage="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:local="clr-namespace:horus_prueba"
    xmlns:models="clr-namespace:horus_prueba.Models.Challenges"
    xmlns:yummy="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    x:Name="RetosTemplateRef"
    x:DataType="models:ChallengeModel">
    <ContentView.Content>
        <Frame
            Margin="20,10"
            Padding="20"
            BackgroundColor="{StaticResource White}"
            CornerRadius="20"
            HasShadow="True">
            <Frame.Triggers>
                <DataTrigger
                    Binding="{Binding IsEqual}"
                    TargetType="Frame"
                    Value="True">
                    <Setter Property="BackgroundColor" Value="{StaticResource Red}" />
                </DataTrigger>
            </Frame.Triggers>
            <StackLayout>
                <StackLayout Orientation="Horizontal">
                    <Label
                        FontAttributes="Bold"
                        FontSize="16"
                        HorizontalOptions="FillAndExpand"
                        Text="{Binding Title}"
                        TextColor="{StaticResource TextColorBlack}">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsEqual}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="{StaticResource White}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <ffimage:CachedImage
                        Aspect="Fill"
                        HeightRequest="25"
                        Source="{local:ImageResource horus_prueba.Resources.Images.arrow_right_g.png}"
                        WidthRequest="25">
                        <ffimage:CachedImage.Triggers>
                            <DataTrigger
                                Binding="{Binding IsEqual}"
                                TargetType="ffimage:CachedImage"
                                Value="True">
                                <Setter Property="Source" Value="{local:ImageResource horus_prueba.Resources.Images.arrow_right_w.png}" />
                            </DataTrigger>
                        </ffimage:CachedImage.Triggers>
                    </ffimage:CachedImage>
                </StackLayout>
                <Label Text="{Binding Description}" TextColor="{StaticResource Comment}">
                    <Label.Triggers>
                        <DataTrigger
                            Binding="{Binding IsEqual}"
                            TargetType="Label"
                            Value="True">
                            <Setter Property="TextColor" Value="{StaticResource White}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <StackLayout Orientation="Horizontal">
                    <Label
                        FontSize="14"
                        HorizontalOptions="FillAndExpand"
                        TextColor="{StaticResource Comment}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding CurrentPoints}" />
                                <Span Text="/" />
                                <Span Text="{Binding TotalPoints}" />
                            </FormattedString>
                        </Label.FormattedText>
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsEqual}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="White" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label Text="{Binding ProgressPorcent, StringFormat='{0}%'}" TextColor="{StaticResource Red}">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsEqual}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="{StaticResource White}" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </StackLayout>
                <ProgressBar Progress="{Binding ProgressBar}" ProgressColor="{StaticResource Red}">
                    <ProgressBar.Triggers>
                        <DataTrigger
                            Binding="{Binding IsEqual}"
                            TargetType="ProgressBar"
                            Value="True">
                            <Setter Property="ProgressColor" Value="{StaticResource White}" />
                        </DataTrigger>
                    </ProgressBar.Triggers>
                </ProgressBar>
            </StackLayout>
        </Frame>
    </ContentView.Content>
</ContentView>
